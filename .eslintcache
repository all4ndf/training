[{"D:\\ReactTraining\\training1\\src\\index.js":"1","D:\\ReactTraining\\training1\\src\\App.js":"2","D:\\ReactTraining\\training1\\src\\reportWebVitals.js":"3","D:\\ReactTraining\\training1\\src\\Test.jsx":"4","D:\\ReactTraining\\training1\\src\\components\\Form1.jsx":"5","D:\\ReactTraining\\training1\\src\\components\\Form2.jsx":"6","D:\\ReactTraining\\training1\\src\\components\\Routes.jsx":"7","D:\\ReactTraining\\training1\\src\\components\\Home.jsx":"8","D:\\ReactTraining\\training1\\src\\components\\Form3.jsx":"9","D:\\ReactTraining\\training1\\src\\components\\FormAntDesign.jsx":"10","D:\\ReactTraining\\training1\\src\\components\\SampleForm1.jsx":"11"},{"size":614,"mtime":1610948274759,"results":"12","hashOfConfig":"13"},{"size":1074,"mtime":1610950315685,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":275,"mtime":1610523189960,"results":"16","hashOfConfig":"17"},{"size":3666,"mtime":1610701710523,"results":"18","hashOfConfig":"13"},{"size":1725,"mtime":1610695663218,"results":"19","hashOfConfig":"13"},{"size":1211,"mtime":1610950297563,"results":"20","hashOfConfig":"13"},{"size":162,"mtime":1610604407233,"results":"21","hashOfConfig":"13"},{"size":1949,"mtime":1610945958109,"results":"22","hashOfConfig":"13"},{"size":2885,"mtime":1610950116870,"results":"23","hashOfConfig":"13"},{"size":161,"mtime":1610950268689,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1mxsbu4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11u6n75",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactTraining\\training1\\src\\index.js",[],["50","51"],"D:\\ReactTraining\\training1\\src\\App.js",[],"D:\\ReactTraining\\training1\\src\\reportWebVitals.js",[],"D:\\ReactTraining\\training1\\src\\Test.jsx",[],"D:\\ReactTraining\\training1\\src\\components\\Form1.jsx",["52"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nconst Form1 = (props) => {\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [qty, setQty] = useState(0);\r\n  const [unitPrice, setUnitPrice] = useState(0);\r\n  const [amount, setAmount] = useState(0);\r\n  const [patientInformation, setPatientInformation] = useState({});\r\n  const [patients, setPatients] = useState([]);\r\n  const [patientNo, setPatientNo] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    handleGetPatientInformation();\r\n    console.log(props);\r\n\r\n    setPatientNo(props.location.state.patientNo);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleComputeAmount();\r\n  }, [qty, unitPrice]);\r\n\r\n  const handleComputeAmount = () => {\r\n    let q = isNaN(qty) ? 0 : qty;\r\n    let p = isNaN(unitPrice) ? 0 : unitPrice;\r\n\r\n    setAmount(q * p);\r\n  };\r\n  const handleGetPatientInformation = () => {\r\n    console.log(\"Handle Patient Information\");\r\n    setPatientInformation({\r\n      lastName: \"Fabular\",\r\n      firstName: \"Allan\",\r\n      middleName: \"Delola\",\r\n    });\r\n\r\n    setPatients([\r\n      {\r\n        lastName: \"Fabular\",\r\n        firstName: \"Allan\",\r\n        middleName: \"Delola\",\r\n      },\r\n      {\r\n        lastName: \"Dela Cruz\",\r\n        firstName: \"Joseph\",\r\n        middleName: \"Ocampo\",\r\n      },\r\n      {\r\n        lastName: \"Dela Cruz\",\r\n        firstName: \"Joseph\",\r\n        middleName: \"Ocampo\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleChangeLastname = (e) => {\r\n    console.log(e);\r\n    setLastName(e.target.value);\r\n  };\r\n\r\n  const handleForm2 = () => {\r\n    props.history.push({\r\n      pathname: \"/form2\",\r\n      state: {\r\n        listOfItems: [\r\n          {\r\n            itemCode: \"1\",\r\n            brandName: \"xxxxxxxxxxx\",\r\n          },\r\n          {\r\n            itemCode: \"2\",\r\n            brandName: \"rrrrrrrr\",\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Form 1</h1>\r\n      <button onClick={() => handleForm2()}>Form 2</button>\r\n      <div>\r\n        {firstName} {lastName}\r\n      </div>\r\n      <div>\r\n        {qty} {unitPrice}\r\n      </div>\r\n      <div>{amount}</div>\r\n      <div>{patientInformation.lastName}</div>\r\n\r\n      <div>\r\n        {patients.map((object, index) => {\r\n          return (\r\n            <p key={object.lastName}>\r\n              {object.lastName} - {object.firstName}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>{patientNo}</div>\r\n\r\n      <form onSubmit={handleSubmitForm}>\r\n        <div>\r\n          <label>Lastname:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            onChange={(e) => handleChangeLastname(e)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Firstname:</label>\r\n          <input className=\"input\" type=\"text\" name=\"firstName\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Qty:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            name=\"qty\"\r\n            onChange={(e) => setQty(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Unit price:</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            name=\"unitPrice\"\r\n            onChange={(e) => setUnitPrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form1;\r\n","D:\\ReactTraining\\training1\\src\\components\\Form2.jsx",[],"D:\\ReactTraining\\training1\\src\\components\\Routes.jsx",[],"D:\\ReactTraining\\training1\\src\\components\\Home.jsx",[],"D:\\ReactTraining\\training1\\src\\components\\Form3.jsx",[],"D:\\ReactTraining\\training1\\src\\components\\FormAntDesign.jsx",["53"],"import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Space,\r\n  Modal,\r\n  message,\r\n  Input,\r\n  Select,\r\n  Checkbox,\r\n  DatePicker,\r\n} from \"antd\";\r\nconst { Option } = Select;\r\nconst FormAntDesign = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleShowModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    console.log(\"Ok\");\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    console.log(\"Cancel\");\r\n  };\r\n\r\n  const handleDisplayMessage = () => {\r\n    message.warning(\"Warning\");\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  const onChange = () => {};\r\n  return (\r\n    <>\r\n      <h1>Form AntDesign</h1>\r\n\r\n      <Row gutter={[12, 12]}>\r\n        <Col xs={24} sm={24} md={6}>\r\n          <Space direction=\"vertical\">\r\n            <DatePicker onChange={onChange} />\r\n            <DatePicker onChange={onChange} picker=\"week\" />\r\n            <DatePicker onChange={onChange} picker=\"month\" />\r\n            <DatePicker onChange={onChange} picker=\"quarter\" />\r\n            <DatePicker onChange={onChange} picker=\"year\" />\r\n          </Space>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={12}>\r\n          <Card\r\n            title=\"Default size card\"\r\n            extra={<a href=\"#\">More</a>}\r\n            style={{ width: \"100%\", background: \"#fae6ff\" }}\r\n            hoverable\r\n          >\r\n            <Space>\r\n              <Button type=\"primary\" onClick={handleShowModal}>\r\n                Show Modal\r\n              </Button>\r\n              <Button onClick={handleDisplayMessage}>Display Message</Button>\r\n              <Button type=\"dashed\">Dashed Button</Button>\r\n              <br />\r\n              <Button type=\"text\">Text Button</Button>\r\n              <Button type=\"link\">Link Button</Button>\r\n            </Space>\r\n          </Card>\r\n\r\n          <Modal\r\n            title=\"Basic Modal\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <p>Some contents...</p>\r\n            <p>Some contents...</p>\r\n            <p>Some contents...</p>\r\n          </Modal>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={6}>\r\n          <Input placeholder=\"Basic usage\" />\r\n\r\n          <Select\r\n            defaultValue=\"lucy\"\r\n            style={{ width: 120 }}\r\n            onChange={handleChange}\r\n          >\r\n            <Option value=\"jack\">Jack</Option>\r\n            <Option value=\"lucy\">Lucy</Option>\r\n            <Option value=\"disabled\" disabled>\r\n              Disabled\r\n            </Option>\r\n            <Option value=\"Yiminghe\">yiminghe</Option>\r\n          </Select>\r\n          <Checkbox>Checkbox</Checkbox>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormAntDesign;\r\n","D:\\ReactTraining\\training1\\src\\components\\SampleForm1.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":21,"nodeType":"60","messageId":"61","endLine":5,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":58,"column":20,"nodeType":"64","endLine":58,"endColumn":32},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'setFirstName' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]